from fastapi import FastAPI, Request, Response
from dialog_state import process_message
import os
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

# –£–¥–∞–ª–∏–ª–∏ register() –∏–∑ startup, —á—Ç–æ–±—ã –≤—Ä—É—á–Ω—É—é –≤—ã–∑—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ /register
@app.on_event("startup")
async def startup_event():
    print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
@app.get("/")
@app.head("/")
async def root():
    return {"status": "ok"}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ Webhook Wazzup ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã
@app.post("/webhook/wazzup")
@app.head("/webhook/wazzup")
async def wazzup_webhook(request: Request):
    print(f"üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {request.method}")
    try:
        data = await request.json()
        print("üì¶ –ü–æ–ª—É—á–µ–Ω JSON:", data)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON:", str(e))
        return Response(status_code=200)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 200 –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

    # –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Äî –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    messages = data.get("messages", [])
    for msg in messages:
        phone = msg["author"].replace("whatsapp:", "")
        text = msg.get("text", "")
        await process_message(phone, text)

    return {"status": "ok"}

# –†—É—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–µ–±—Ö—É–∫–∞
@app.get("/register")
async def trigger_register():
    from register_webhook import register
    register()
    return {"status": "Webhook registration triggered"}
