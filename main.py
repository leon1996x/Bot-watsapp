from fastapi import FastAPI, Request
import httpx

from state_machine import get_state, set_state, State

app = FastAPI()

WAZZUP_TOKEN = "4e68fe2f438140b0ba531c114509b1e9"
WEBHOOK_URL = "https://bot-watsapp-y7e8.onrender.com/webhook/wazzup"
CHANNEL_ID = "fe817b21-47a7-424e-a021-9b5200c4cf29"


@app.on_event("startup")
async def startup_event():
    print("üî• THIS IS THE RIGHT MAIN.PY")
    print("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")


@app.get("/")
async def root():
    return {"message": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"}


@app.get("/webhook/wazzup")
@app.head("/webhook/wazzup")
async def wazzup_webhook_check():
    return {"status": "ok"}


@app.post("/webhook/wazzup")
async def handle_webhook(request: Request):
    body = await request.json()
    print("üì© Webhook –ø–æ–ª—É—á–µ–Ω:", body)

    try:
        for msg in body.get("messages", []):
            text = msg.get("text", "").strip()
            phone = msg.get("contact", {}).get("phone")
            chat_id = msg.get("chatId", "")

            # –µ—Å–ª–∏ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç ‚Äî –ø—Ä–æ–±—É–µ–º –≤—ã—Ç–∞—â–∏—Ç—å –∏–∑ chatId
            if not phone and chat_id and chat_id[-10:].isdigit():
                phone = "+7" + chat_id[-10:]

            if not phone:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
                continue

            print(f"üìû phone: {phone}, üí¨ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")

            state = get_state(phone)

            if state == State.START:
                await send_message(phone, 
                    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú—ã –ø–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏.\n"
                    "–í—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ:\n"
                    "1Ô∏è‚É£ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ\n"
                    "2Ô∏è‚É£ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
                    "3Ô∏è‚É£ –§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ", 
                    chat_id
                )
                set_state(phone, State.CLIENT_TYPE)

            elif state == State.CLIENT_TYPE:
                if text in ["1", "1Ô∏è‚É£", "—é—Ä", "—é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ"]:
                    await send_message(phone, "–•–æ—Ä–æ—à–æ, —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –ò–ù–ù.", chat_id)
                    set_state(phone, State.INN)
                elif text in ["2", "2Ô∏è‚É£", "–≥–æ—Å", "–≥–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ"]:
                    await send_message(phone, "–û—Ç–ª–∏—á–Ω–æ, —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ò–ù–ù —É—á—Ä–µ–∂–¥–µ–Ω–∏—è.", chat_id)
                    set_state(phone, State.GOV_INN)
                elif text in ["3", "3Ô∏è‚É£", "—Ñ–∏–∑", "—Ñ–∏–∑–ª–∏—Ü–æ"]:
                    await send_message(phone, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å —é—Ä–ª–∏—Ü–∞–º–∏ –∏ –≥–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏.", chat_id)
                    set_state(phone, State.START)
                else:
                    await send_message(phone, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1Ô∏è‚É£, 2Ô∏è‚É£ –∏–ª–∏ 3Ô∏è‚É£.", chat_id)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:", str(e))

    return {"message": "–ü–æ–ª—É—á–µ–Ω–æ"}


# ‚úÖ send_message —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π chatId
async def send_message(phone: str, text: str, chat_id: str = None):
    url = "https://api.wazzup24.com/v3/message"
    headers = {
        "Authorization": f"Bearer {WAZZUP_TOKEN}",
        "Content-Type": "application/json"
    }

    data = {
        "channelId": CHANNEL_ID,
        "text": text
    }

    if chat_id:
        data["chatId"] = chat_id
    else:
        data["chatType"] = "whatsapp"
        data["phone"] = phone

    async with httpx.AsyncClient() as client:
        response = await client.post(url, json=data, headers=headers)

    print("üì§ –û—Ç–≤–µ—Ç Wazzup:", response.status_code, await response.aread())


@app.get("/register")
async def register_webhook():
    print("–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫...")
    print("üîë TOKEN:", WAZZUP_TOKEN)

    url = "https://api.wazzup24.com/v3/webhooks"
    headers = {
        "Authorization": f"Bearer {WAZZUP_TOKEN}",
        "Content-Type": "application/json"
    }
    data = {
        "webhooksUri": WEBHOOK_URL,
        "subscriptions": {
            "messagesAndStatuses": True,
            "contactsAndDealsCreation": True
        }
    }

    async with httpx.AsyncClient() as client:
        response = await client.patch(url, json=data, headers=headers)

    print("üì° Webhook registration response:", response.status_code)
    print("üì¨ Response text:", response.text)

    try:
        json_response = response.json()
    except Exception as e:
        return {
            "status_code": response.status_code,
            "response": {
                "error": "Failed to parse JSON",
                "details": str(e)
            }
        }

    return {
        "status_code": response.status_code,
        "response": json_response
    }
