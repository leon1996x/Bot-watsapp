# main.py
from fastapi import FastAPI, Request
import httpx
from state_machine import get_state, set_state, State, get_context, update_context

app = FastAPI()



@app.on_event("startup")
async def startup_event():
    print("üî• FSM –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")

@app.get("/")
async def root():
    return {"message": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"}

@app.get("/webhook/wazzup")
@app.head("/webhook/wazzup")
async def wazzup_webhook_check():
    return {"status": "ok"}

@app.post("/webhook/wazzup")
async def handle_webhook(request: Request):
    body = await request.json()
    print("üì© Webhook –ø–æ–ª—É—á–µ–Ω:", body)

    for msg in body.get("messages", []):
        chat_id = msg.get("chatId", "").strip()
        text = msg.get("text", "").strip().lower()

        if not chat_id:
            continue

        state = get_state(chat_id)
        context = get_context(chat_id)

        if state == State.START:
            await send_message(chat_id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú—ã –ø–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏.\n–ö–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å? (—é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ / –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ / —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ)")
            set_state(chat_id, State.CLIENT_TYPE)

        elif state == State.CLIENT_TYPE:
            if "—Ñ–∏–∑" in text:
                await send_message(chat_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏ –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!")
                set_state(chat_id, State.START)
            elif "—é—Ä" in text:
                update_context(chat_id, {"client_type": "juridical"})
                await send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ò–ù–ù –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
                set_state(chat_id, State.INN)
            elif "–≥–æ—Å" in text or "—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ" in text:
                update_context(chat_id, {"client_type": "gov"})
                await send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ò–ù–ù —É—á—Ä–µ–∂–¥–µ–Ω–∏—è")
                set_state(chat_id, State.INN)
            else:
                await send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ: —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ?")

        elif state == State.INN:
            update_context(chat_id, {"inn": text})
            if context.get("client_type") == "juridical":
                await send_message(chat_id, "–î–ª—è —á–µ–≥–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç—Å—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ? (–¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è / –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç–æ—Ä–≥–∞—Ö / –¥–ª—è –ø–æ—Å—Ç–∞–≤–∫–∏ –≤ –≥–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏–µ)")
                set_state(chat_id, State.PURPOSE)
            else:
                await send_message(chat_id, "–ö–∞–∫ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –∑–∞–∫—É–ø–∫–∞? (–ø—Ä—è–º–æ–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç / —á–µ—Ä–µ–∑ —Ç–æ—Ä–≥–∏)")
                set_state(chat_id, State.GOV_PURCHASE_METHOD)

        elif state == State.PURPOSE:
            update_context(chat_id, {"purpose": text})
            if "—Ç–æ—Ä–≥" in text:
                await send_message(chat_id, "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º! –ú—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å —Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—ã –∏ —Å—Ä–æ–∫–∏ –ø–æ—Å—Ç–∞–≤–∫–∏.")
            if "–≥–æ—Å" in text:
                await send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ò–ù–ù –≥–æ—Å—É—á—Ä–µ–∂–¥–µ–Ω–∏—è")
                set_state(chat_id, State.GOV_PARTNER_INN)
                return
            await send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–∫—É–ø–∫–∏")
            set_state(chat_id, State.DEADLINE)

        elif state == State.GOV_PURCHASE_METHOD:
            update_context(chat_id, {"gov_method": text})
            if "–ø—Ä—è–º–æ–π" in text:
                await send_message(chat_id, "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ –≤ —á–∞—Ç–µ. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É.")
            else:
                await send_message(chat_id, "–ú—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞.")
            await send_message(chat_id, "–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –º–æ–Ω—Ç–∞–∂ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –æ–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞?")
            set_state(chat_id, State.EXTRA_SERVICES)

        elif state == State.GOV_PARTNER_INN:
            update_context(chat_id, {"gov_partner_inn": text})
            await send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–∫—É–ø–∫–∏")
            set_state(chat_id, State.DEADLINE)

        elif state == State.DEADLINE:
            update_context(chat_id, {"deadline": text})
            await send_message(chat_id, "–û—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ email –¥–ª—è —Å–≤—è–∑–∏")
            set_state(chat_id, State.CONTACTS)

        elif state == State.EXTRA_SERVICES:
            update_context(chat_id, {"extra_services": text})
            await send_message(chat_id, "–£–∫–∞–∂–∏—Ç–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–∫—É–ø–∫–∏")
            set_state(chat_id, State.DEADLINE)

        elif state == State.CONTACTS:
            update_context(chat_id, {"contacts": text})
            await send_message(chat_id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
            set_state(chat_id, State.START)

    return {"message": "ok"}

async def send_message(chat_id: str, text: str):
    url = "https://api.wazzup24.com/v3/message"
    headers = {
        "Authorization": f"Bearer {WAZZUP_TOKEN}",
        "Content-Type": "application/json"
    }
    if not chat_id.endswith("@c.us"):
        chat_id = chat_id.replace("+", "").replace("@c.us", "") + "@c.us"

    data = {
        "channelId": CHANNEL_ID,
        "chatId": chat_id,
        "chatType": "whatsapp",
        "text": text
    }

    async with httpx.AsyncClient() as client:
        await client.post(url, json=data, headers=headers)  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Ä–∞–¥–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
